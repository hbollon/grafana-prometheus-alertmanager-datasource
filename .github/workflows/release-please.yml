name: release-please

on:
  push:
    branches:
      - master

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - name: Release-please check
        id: release
        uses: google-github-actions/release-please-action@v3 
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          changelog-path: CHANGELOG.md

      - name: Checkout codebase
        uses: actions/checkout@v2
        if: ${{ steps.release.outputs.release_created }}

      - name: Setup NodeJS 16
        uses: actions/setup-node@v3
        if: ${{ steps.release.outputs.release_created }}
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        if: ${{ steps.release.outputs.release_created }}
        run: yarn install --pure-lockfile

      - name: Build plugin
        if: ${{ steps.release.outputs.release_created }}
        run: yarn run build

      - name: Sign plugin
        if: ${{ steps.release.outputs.release_created }}
        env:
          GRAFANA_API_KEY: ${{ secrets.GRAFANA_API_KEY }}
        run: yarn sign

      - name: Package plugin
        if: ${{ steps.release.outputs.release_created }}
        run: |
          mv dist/ camptocamp-prometheus-alertmanager-datasource
          zip -r camptocamp-prometheus-alertmanager-datasource-${{ steps.release.outputs.tag_name }}.zip ./camptocamp-prometheus-alertmanager-datasource
          md5sum camptocamp-prometheus-alertmanager-datasource-${{ steps.release.outputs.tag_name }}.zip > camptocamp-prometheus-alertmanager-datasource-${{ steps.release.outputs.tag_name }}.zip.md5
      
      - name: Upload artifacts to latest release
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl \
          -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Content-Type: $(file -b --mime-type camptocamp-prometheus-alertmanager-datasource-${{ steps.release.outputs.tag_name }}.zip)" \
          --data-binary @camptocamp-prometheus-alertmanager-datasource-${{ steps.release.outputs.tag_name }}.zip \
          ${{ steps.release.outputs.upload_url }}

          curl \
          -X POST \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Content-Type: $(file -b --mime-type camptocamp-prometheus-alertmanager-datasource-${{ steps.release.outputs.tag_name }}.zip.md5)" \
          --data-binary @camptocamp-prometheus-alertmanager-datasource-${{ steps.release.outputs.tag_name }}.zip.md5 \
          ${{ steps.release.outputs.upload_url }}
      
